<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.propellerhead.dao.CustomerDao">

    <select id="get" resultType="com.propellerhead.domain.CustomerDO">
        select `customer_id`,`customer_name`,`email`,
        `mobile`,`status`,`gender`,`birth`,`address`,
        `create_date`,`update_date`
        from t_customer where customer_id = #{value}
    </select>

    <select id="list" resultType="com.propellerhead.domain.CustomerDO">
        select `customer_id`,`customer_name`,`email`,
        `mobile`,`status`,`gender`,`birth`,`address`,
        `create_date`,`update_date`
        from t_customer
        <where>
            <if test="customerId != null and customerId != ''"> and customer_id = #{customerId} </if>
            <if test="customerName != null and customerName != ''"> and customer_name = #{customerName} </if>
            <if test="email != null and email != ''"> and email = #{email} </if>
            <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="gender != null and gender != ''"> and gender = #{gender} </if>
            <if test="birth != null and birth != ''"> and birth = #{birth} </if>
            <if test="create_date != null and create_date != ''"> and create_date = #{createDate} </if>
            <if test="update_date != null and update_date != ''"> and update_date = #{updateDate} </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by customer_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from t_customer
        <where>
            <if test="customerId != null and customerId != ''"> and customer_id = #{customerId} </if>
            <if test="customerName != null and customerName != ''"> and customer_name = #{customerName} </if>
            <if test="email != null and email != ''"> and email = #{email} </if>
            <if test="mobile != null and mobile != ''"> and mobile = #{mobile} </if>
            <if test="status != null and status != ''"> and status = #{status} </if>
            <if test="gender != null and gender != ''"> and gender = #{gender} </if>
            <if test="birth != null and birth != ''"> and birth = #{birth} </if>
            <if test="create_date != null and create_date != ''"> and create_date = #{createDate} </if>
            <if test="update_date != null and update_date != ''"> and update_date = #{updateDate} </if>
        </where>
    </select>

    <insert id="save" parameterType="com.propellerhead.domain.CustomerDO" useGeneratedKeys="true" keyProperty="customerId">
        insert into t_customer
        (
        `customer_id`,`customer_name`,`email`,
        `mobile`,`status`,`gender`,`birth`,`address`,
        `create_date`,`update_date`
        )
        values
        (
        #{customerId},#{customerName},#{email},
        #{mobile},#{status},#{gender},#{birth},#{address},
        now(),now()
        )
    </insert>

    <update id="update" parameterType="com.propellerhead.domain.CustomerDO">
        update t_customer
        <set>
            <if test="customerName != null">`customer_name` = #{customerName}, </if>
            <if test="email != null">`email` = #{email}, </if>
            <if test="mobile != null">`mobile` = #{mobile}, </if>
            <if test="status != null">`status` = #{status}, </if>
            <if test="gender != null">`gender` = #{gender}, </if>
            <if test="birth != null">`birth` = #{birth}, </if>
            <if test="updateDate != null">`update_date` = #{updateDate}</if>
        </set>
        where customer_id = #{customerId}
    </update>

    <delete id="remove">
        delete from t_customer where customer_id = #{customerId}
    </delete>

</mapper>